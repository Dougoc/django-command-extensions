= RunProfileServer =

_First of all; we recommend that before you start profiling any language or framework you learn enough about it so that you feel comfortable with digging into it's internals.  Without sufficient knowledge it will not only be (very) hard but your likely to make wrong assumptions (and fixes). As a rule of thumb, clean well written code will help you a lot more then overzealous micro-optimizations will._

_This document is work in progress. If you feel you can help with better/clearer or additional information about profiling Django please leave a comment._

= Introduction =

*runprofileserver* starts Django's runserver command with hotshot/profiling tools enabled.

It will save .prof files containing the profiling information into the --prof-path directory. Note that for each request made one profile data file is saved.

Per default the profile-data-files are saved in /tmp use the --prof-path option to specify your own target directory. Saving the data in a meaningful directory structure helps to keep your profile data organized and /tmp uncluttered. (Yes this is probably a bug on windows and other systems where /tmp does not exist)

== gather_profile_stats.py ==

Django comes packed with a tool to aggregate these different prof files into one aggregated profile file. This tool is called _gather_profile_stats.py_ and is located inside the _bin_ directory of your Django distribution.

== --kcachegrind ==

Recent versions of *runprofileserver* have an option to save the profile data into a KCacheGrind compatible format. KCacheGrind is an excellent tool for debugging. 

Here is a screenshot of how KCacheGrind might look when debugging/profiling django:
[http://trbs.net/media/misc/django-runprofileserver-kcachegrind-full.jpg http://trbs.net/media/misc/django-runprofileserver-kcachegrind-small.jpg]

== Links ==

 * http://code.djangoproject.com/wiki/ProfilingDjango
 * http://www.rkblog.rk.edu.pl/w/p/django-profiling-hotshot-and-kcachegrind/
 * http://code.djangoproject.com/browser/django/trunk/django/bin/profiling/gather_profile_stats.py
 * http://www.oluyede.org/blog/2007/03/07/profiling-django/
 * http://simonwillison.net/2008/May/22/debugging/